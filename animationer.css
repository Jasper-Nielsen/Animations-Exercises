/* Animation 1: Falling
   Bolden falder konstant fra oven. */
.falling {
  animation-name: falling;
  animation-duration: 2s;
  animation-timing-function: ease-in;
  animation-iteration-count: infinite;
}

@keyframes falling {
  0% {
    transform: translate(0, -300%);
  }

  100% {
    transform: translate(0, 300%);
  }
}

.bouncing {
  animation-name: bouncing;
  animation-duration: 1s;
  animation-timing-function: linear;
  animation-iteration-count: infinite;
}

@keyframes bouncing {
  0% {
    transform: translate(0, -150%);
  }

  50% {
    transform: translate(0, 150%);
  }

  100% {
    transform: translate(0, -150%);
  }
}

.drop {
  animation-name: drop;
  animation-duration: 1s;
  animation-timing-function: ease-in;
  animation-iteration-count: 1;
  animation-fill-mode: forwards;
}

@keyframes drop {
  0% {
    transform: translate(0, -300%);
  }

  100% {
    transform: translate(0, 140%);
  }
}

.pattern {
  animation: south_east 2s linear infinite;
}

@keyframes south_east {
  0% {
    transform: translate(0%, -150%);
  }
  25% {
    transform: translate(150%, 0%);
  }
  50% {
    transform: translate(0%, 150%);
  }
  75% {
    transform: translate(-150%, 0%);
  }
  100% {
    transform: translate(0%, -150%);
  }
}

.zoom_out {
  animation: zoom_out 5s 1 forwards;
}

@keyframes zoom_out {
  0% {
    transform: scale(10);
  }

  100% {
    transform: scale(0.1);
  }
}

.zoom_in {
  animation: zoom_in 5s 1 forwards;
}

@keyframes zoom_in {
  0% {
    transform: scale(0.1);
  }

  100% {
    transform: scale(10);
  }
}

.fade_out {
  animation: fade_out 3s 1 forwards;
}

@keyframes fade_out {
  0% {
    opacity: 1;
  }

  100% {
    opacity: 0;
  }
}

.fade_in {
  animation: fade_in 3s 1 forwards;
}

@keyframes fade_in {
  0% {
    /* hvorfor ikke transform:opacity? */
    opacity: 0;
  }

  100% {
    opacity: 1;
  }
}

.rotation {
  /* sv√¶rt med notation */
  animation: rotation 2s linear infinite;
}

@keyframes rotation {
  100% {
    transform: rotate(360deg);
  }
}

.rotation2 {
  animation: rotation2 3s linear infinite;
}

@keyframes rotation2 {
  0% {
    transform: rotate(0deg) translate(40px);
  }

  100% {
    transform: rotate(360deg) translate(40px);
  }
}

.glow {
  animation: glow 3s infinite;
}

@keyframes glow {
  0% {
    filter: brightness(50%);
    filter: contrast(50%);
  }

  100% {
    filter: brightness(150%);
    filter: contrast(150%);
    /* in order: x offset, y offset, blur size, spread size, color */
    box-shadow: 0px 0px 3px 1px #ffd700;
    border-radius: 100%;
  }
}

.blur_to_gray {
  animation-name: blur_to_grey;

  animation-duration: 3s;
  animation-timing-function: linear;
  animation-iteration-count: infinite;
  animation-fill-mode: forwards;
}

@keyframes blur_to_grey {
  /* important that it rotates from 0 to 180 to 0 again if same deg. It wille not 
  rotate visually */
  /* note same property in same line. different property seperated by ; */
  0% {
    transform: translate(-8vw, 0) rotate(0deg);
    filter: grayscale(0%) blur(0);
  }
  50% {
    transform: translate(8vw, 0) rotate(180deg);
    filter: grayscale(100%) blur(2px);
  }
  100% {
    transform: translate(-8vw, 0) rotate(0deg);
    filter: grayscale(0%) blur(0);
  }
}

.pulse{
  animation: pulse 3s linear infinite;
}

@keyframes pulse{
  0%{
    transform:scale(0.8)
  }
  50%{
transform:scale(0.9)
  }
  100%{
    transform:scale(0.8)
  }
}

.overshoot{
animation: overshoot 1s infinite cubic-bezier(.28,.28,.68,.86);
}

@keyframes overshoot {
  0%{
    transform: translate(-10vw,0) rotate(0deg);
  }
  50%{
    transform: translate(10vw,0) rotate(180deg);
  }
  100%{
    transform: translate(6vw,0) rotate(120deg);
  }
}

.bounce{
animation: bounce 3s linear infinite ; 

}

@keyframes bounce {
  0%{
    transform: translate(-5vw,-6vw) rotate(0deg);
  }
  20%{
    transform: translate(-3vw,8vw) rotate(70deg);
  }

  40%{
    transform: translate(-1vw,4vw) rotate(160deg);
  }
  60%{
    transform: translate(2vw,8vw) rotate(220deg);
  }
  
  70%{
    transform: translate(4vw,6vw) rotate(250deg);
  }
  80%{
    transform: translate(5vw,8vw) rotate(280deg);
  }

  90%{
    transform: translate(7vw,7vw) rotate(310deg);
  }
  100%{
    transform: translate(9vw,8vw) rotate(340deg);
  }
}

.squash{
animation: squash 3s linear infinite;
}

@keyframes squash
 {
  

  0% {
    transform: translate(0%, -150%) scaleX(1);
  }
  25% {
    /* ball hits wall first time*/
    transform: translate(180%, 0%) ;
  }
  26%{
    /* ball deforms on horisontally */
    transform:translate(180%, 0%) scaleX(0.5);
  }
  27%{
    /* ball returns to original size */
    transform:translate(180%, 0%) scaleX(1);
  }

/* same logic for the rest */

/* second wall hit */
  50% {
    transform: translate(0%, 150%);
  }
  51%{
    transform:translate(0%, 150%) scaleY(0.5);
  }
  52%{
    transform:translate(0%, 150%) scaleY(1);
  }

/* third wall hit */
  75% {
    transform: translate(-160%, 0%) ;
  }
   76% {
    transform: translate(-160%, 0%) scaleX(0.5);
  }
   77% {
    transform: translate(-160%, 0%) scaleX(1);
  }


/* fourth wall hit */
  98% {
    transform: translate(0%, -150%) ;
  }99% {
    transform: translate(0%, -150%) scaleY(0.5) ;
  }
  100% {
    transform: translate(0%, -150%) scaleY(1);
  }
}

